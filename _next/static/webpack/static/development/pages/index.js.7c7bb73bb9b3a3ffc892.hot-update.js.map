{"version":3,"file":"static/webpack/static/development/pages/index.js.7c7bb73bb9b3a3ffc892.hot-update.js","sources":["webpack:///./components/SpeakerInfo/SpeakerInfo.tsx"],"sourcesContent":["import { EtcData } from 'db/Etc';\nimport { Speaker } from 'db/Speaker';\nimport React, { MouseEvent } from 'react';\nimport css from './SpeakerInfo.scss';\n\ninterface SpeakerInfoProps {\n  speaker: Speaker;\n  selectSpeaker: (o: boolean, s?: Speaker) => void;\n}\n\nexport class SpeakerInfo extends React.Component<SpeakerInfoProps> {\n  public render() {\n    const { speaker } = this.props;\n    return !speaker ? null : (\n      <section className={css.SpeakerInfo}>\n        <div className={css.CloseBtn}>\n          <a href=\"#\" onClick={this.handleClickClose}>\n            <img src=\"static/images/general/close@2x.png\" alt=\"close\" />\n          </a>\n        </div>\n        <div className={css.SpeakerWrap}>\n          <div className={css.Profile}>\n            <div className={css.Image}>\n              <img src={speaker.profileImage} alt=\"profile image\" />\n            </div>\n            <div className={css.Text}>\n              <div className={css.Name}>\n                <span>{speaker.name}</span>\n              </div>\n              {speaker.company ? (\n                <div className={css.Company}>\n                  <a target=\"_blank\" href={speaker.company.link}>\n                    {speaker.company.name}\n                  </a>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"clear\" />\n          </div>\n          <div className={css.Present}>\n            <div className={css.Title}>\n              <span>{speaker.presentTitle}</span>\n              {speaker.link ? <a href={speaker.link}>[ Link ]</a> : null}\n            </div>\n            <div className={css.Track}>\n              <span>\n                Track {speaker.track} | {EtcData.sessionOrderMappingTime[speaker.order]}\n              </span>\n            </div>\n            <div className={css.Desc}>\n              <span>{speaker.presentDesc}</span>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  private handleClickClose = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    this.props.selectSpeaker(false);\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAiDA;AACA;AAAA;AACA;AACA;AApDA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAKA;AAAA;AAOA;AA9CA;AACA;AADA;AAAA;;;;A","sourceRoot":""}