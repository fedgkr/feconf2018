{"version":3,"file":"static/webpack/static/development/pages/index.js.f9f382f83d7bedcb7ddc.hot-update.js","sources":["webpack:///./components/FixedButton/FixedButton.tsx","webpack:///./components/FooterSection/FooterSection.tsx"],"sourcesContent":["import React from 'react';\nimport { CONST } from '../../values/Const';\nimport css from './FixedButton.scss';\n\nexport class FixedButton extends React.Component {\n  private anchor: HTMLAnchorElement;\n\n  public componentDidMount() {\n    const doc = document.scrollingElement || document.documentElement;\n    window.addEventListener('scroll', () => {\n      if (doc.scrollTop > 100) {\n        this.anchor.classList.add(css.Show);\n      } else {\n        this.anchor.classList.remove(css.Show);\n      }\n    });\n  }\n\n  public render() {\n    return (\n      <div className={css.FixedButton}>\n        <a\n          className={css.Anchor}\n          href={CONST.JOIN_LINK}\n          ref={el => (this.anchor = el)}\n          onClick={this.onClickJoin}\n        >\n          등록하기\n        </a>\n      </div>\n    );\n  }\n\n  private onClickJoin(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault();\n    alert('참가 신청을 마감했습니다.');\n  }\n}\n","import React from 'react';\nimport { CONST } from '../../values/Const';\nimport css from './FooterSection.scss';\n\nexport class FooterSection extends React.Component {\n  private wrapper: HTMLElement;\n\n  public componentDidMount() {\n    const options = { threshold: 0.4 };\n    const io = new IntersectionObserver(this.onIntersecting, options);\n    io.observe(this.wrapper);\n  }\n\n  public render() {\n    return (\n      <footer className={css.FooterSection} ref={el => (this.wrapper = el)}>\n        <div className={css.Content}>\n          <p className={css.Title}>\n            <span>Enjoy Experience Everywhere!</span>\n            <br />\n            <span>FEConf 2018은 여러분의 참여를 기다립니다.</span>\n          </p>\n          <a href={CONST.JOIN_LINK} onClick={this.onClickJoin}>\n            <button className={css.Button}>지금 등록하러 가기</button>\n          </a>\n          <img className={css.ImageCut1} src=\"static/images/pages/footer/cut1.png\" aria-hidden=\"true\" />\n          <img className={css.ImageCut2} src=\"static/images/pages/footer/cut2.png\" aria-hidden=\"true\" />\n          <img className={css.ImageCut3} src=\"static/images/pages/footer/cut3.png\" aria-hidden=\"true\" />\n          <img className={css.ImageCut4} src=\"static/images/pages/footer/cut4.png\" aria-hidden=\"true\" />\n          <img className={css.ImageCut5} src=\"static/images/pages/footer/cut5.png\" aria-hidden=\"true\" />\n          <img className={css.ImageCut6} src=\"static/images/pages/footer/cut6.png\" aria-hidden=\"true\" />\n          <img className={css.ImageCut7} src=\"static/images/pages/footer/cut7.png\" aria-hidden=\"true\" />\n        </div>\n      </footer>\n    );\n  }\n\n  private onIntersecting = (entries: IntersectionObserverEntry[]) => {\n    entries.forEach(({ target, intersectionRatio }) => {\n      if (intersectionRatio >= 0.4) {\n        target.classList.add(css.appear);\n      } else {\n        target.classList.remove(css.appear);\n      }\n    });\n  };\n\n  private onClickJoin(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault();\n    alert('참가 신청을 마감했습니다.');\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAcA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAUA;AA3BA;AAAA;AAAA;AA8BA;AACA;AACA;AAhCA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAkCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AA/BA;AAAA;AAAA;AA4CA;AACA;AACA;AA9CA;AACA;AADA;AAAA;;;;A","sourceRoot":""}